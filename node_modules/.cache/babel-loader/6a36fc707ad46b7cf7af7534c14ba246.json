{"ast":null,"code":"import _slicedToArray from\"/home/ashita/Downloads/Knowlege-Sharing-Platform/Knowlege-Sharing-Platform/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{Table}from\"reactstrap\";import\"../../App.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function NoteList(props){var notes=props.notes;var _useState=useState(\" \"),_useState2=_slicedToArray(_useState,2),searchTerm=_useState2[0],setSearchTerm=_useState2[1];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"search-bar\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",style:{fontSize:\"19px\"},placeholder:\"Search for Notes...\",className:\"search-input\",onChange:function onChange(e){return setSearchTerm(e.target.value);}})}),/*#__PURE__*/_jsxs(Table,{dark:true,bordered:true,responsive:true,children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Course name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Author\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Course ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Batch\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Course Instructor\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Drive link\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:!notes||notes.length<=0?/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"6\",align:\"center\",width:\"400px\",children:/*#__PURE__*/_jsx(\"b\",{children:\"Oops, nothing here yet\"})})}):notes.filter(function(val){if(searchTerm===\" \"){return val;}else if(val.course_id.toString().toLowerCase().includes(searchTerm.toLowerCase())||val.course_instructor.toString().toLowerCase().includes(searchTerm.toLowerCase())){val.title.toString().toLowerCase().includes(searchTerm.toLowerCase());return val;}}).map(function(note){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:note.title}),/*#__PURE__*/_jsx(\"td\",{children:note.name}),/*#__PURE__*/_jsx(\"td\",{children:note.course_id}),/*#__PURE__*/_jsx(\"td\",{children:note.batch}),/*#__PURE__*/_jsx(\"td\",{children:note.course_instructor}),/*#__PURE__*/_jsx(\"td\",{children:note.gdrive_link})]},note.pk);})})]})]});}export default NoteList;","map":{"version":3,"sources":["/home/ashita/Downloads/Knowlege-Sharing-Platform/Knowlege-Sharing-Platform/src/components/Notes/NoteList.js"],"names":["React","useState","Table","NoteList","props","notes","searchTerm","setSearchTerm","fontSize","e","target","value","length","filter","val","course_id","toString","toLowerCase","includes","course_instructor","title","map","note","name","batch","gdrive_link","pk"],"mappings":"gKAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAAQC,KAAR,KAAoB,YAApB,CACA,MAAO,eAAP,C,6IAGA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CAErB,GAAMC,CAAAA,KAAK,CAAGD,KAAK,CAACC,KAApB,CACA,cAAoCJ,QAAQ,CAAC,GAAD,CAA5C,wCAAOK,UAAP,eAAmBC,aAAnB,eAEA,mBACI,wCACI,YAAK,SAAS,CAAC,YAAf,uBACI,cAAO,IAAI,CAAC,MAAZ,CACO,KAAK,CAAE,CAACC,QAAQ,CAAE,MAAX,CADd,CAEO,WAAW,CAAC,qBAFnB,CAGO,SAAS,CAAC,cAHjB,CAIO,QAAQ,CAAE,kBAACC,CAAD,QAAOF,CAAAA,aAAa,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAApB,EAJjB,EADJ,EADJ,cASI,MAAC,KAAD,EAAO,IAAI,KAAX,CAAY,QAAQ,KAApB,CAAqB,UAAU,KAA/B,wBACI,oCACA,mCACI,mCADJ,cAEI,8BAFJ,cAGI,iCAHJ,cAII,6BAJJ,cAKI,yCALJ,cAMI,kCANJ,GADA,EADJ,cAWI,uBACC,CAACN,KAAD,EAAUA,KAAK,CAACO,MAAN,EAAgB,CAA1B,cACG,iCACI,WAAI,OAAO,CAAC,GAAZ,CAAgB,KAAK,CAAC,QAAtB,CAA+B,KAAK,CAAC,OAArC,uBACI,6CADJ,EADJ,EADH,CAOGP,KAAK,CAACQ,MAAN,CAAa,SAAAC,GAAG,CAAI,CACZ,GAAIR,UAAU,GAAK,GAAnB,CAAwB,CACpB,MAAOQ,CAAAA,GAAP,CACH,CAFD,IAEO,IACHA,GAAG,CAACC,SAAJ,CAAcC,QAAd,GAAyBC,WAAzB,GAAuCC,QAAvC,CAAgDZ,UAAU,CAACW,WAAX,EAAhD,GACAH,GAAG,CAACK,iBAAJ,CAAsBH,QAAtB,GAAiCC,WAAjC,GAA+CC,QAA/C,CAAwDZ,UAAU,CAACW,WAAX,EAAxD,CAFG,CAEgF,CACnFH,GAAG,CAACM,KAAJ,CAAUJ,QAAV,GAAqBC,WAArB,GAAmCC,QAAnC,CAA4CZ,UAAU,CAACW,WAAX,EAA5C,EACA,MAAOH,CAAAA,GAAP,CACH,CACJ,CATL,EAUEO,GAVF,CAUM,SAAAC,IAAI,qBACN,mCACI,oBAAKA,IAAI,CAACF,KAAV,EADJ,cAEI,oBAAKE,IAAI,CAACC,IAAV,EAFJ,cAGI,oBAAKD,IAAI,CAACP,SAAV,EAHJ,cAII,oBAAKO,IAAI,CAACE,KAAV,EAJJ,cAKI,oBAAKF,IAAI,CAACH,iBAAV,EALJ,cAMI,oBAAKG,IAAI,CAACG,WAAV,EANJ,GAASH,IAAI,CAACI,EAAd,CADM,EAVV,CARJ,EAXJ,GATJ,GADJ,CAsDH,CAED,cAAevB,CAAAA,QAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {Table} from \"reactstrap\";\nimport \"../../App.css\";\n\n\nfunction NoteList(props) {\n\n    const notes = props.notes;\n    const [searchTerm, setSearchTerm] = useState(\" \");\n\n    return (\n        <>\n            <div className=\"search-bar\">\n                <input type=\"text\"\n                       style={{fontSize: \"19px\"}}\n                       placeholder=\"Search for Notes...\"\n                       className=\"search-input\"\n                       onChange={(e) => setSearchTerm(e.target.value)}\n                />\n            </div>\n            <Table dark bordered responsive>\n                <thead>\n                <tr>\n                    <th>Course name</th>\n                    <th>Author</th>\n                    <th>Course ID</th>\n                    <th>Batch</th>\n                    <th>Course Instructor</th>\n                    <th>Drive link</th>\n                </tr>\n                </thead>\n                <tbody>\n                {!notes || notes.length <= 0 ? (\n                    <tr>\n                        <td colSpan=\"6\" align=\"center\" width=\"400px\">\n                            <b>Oops, nothing here yet</b>\n                        </td>\n                    </tr>\n                ) : (\n                    notes.filter(val => {\n                            if (searchTerm === \" \") {\n                                return val;\n                            } else if (\n                                val.course_id.toString().toLowerCase().includes(searchTerm.toLowerCase()) ||\n                                val.course_instructor.toString().toLowerCase().includes(searchTerm.toLowerCase())) {\n                                val.title.toString().toLowerCase().includes(searchTerm.toLowerCase())\n                                return val;\n                            }\n                        }\n                    ).map(note => (\n                        <tr key={note.pk}>\n                            <td>{note.title}</td>\n                            <td>{note.name}</td>\n                            <td>{note.course_id}</td>\n                            <td>{note.batch}</td>\n                            <td>{note.course_instructor}</td>\n                            <td>{note.gdrive_link}</td>\n                        </tr>\n                    ))\n                )}\n                </tbody>\n            </Table>\n        </>\n    );\n}\n\nexport default NoteList;\n"]},"metadata":{},"sourceType":"module"}